% bash, loop

# Loop numerical
for i in {<start>..<end>..<step>}; do
  echo $i
done

# Loop from array
inputs=('foo' 'bar')
for i in ${inputs[@]}; do
  echo $i
done

# Change file extensions
for i in *.<source_extension>; do
  mv $i ${i//<source_extension>/<target_extension>}
done

% bash, sd

# Replace all occurrences
sd <before> <after>

# Replace newlines
sd '\n' '<target_character>'

# Search and replace with regex and indexed capture groups
sd '<regex>' '$1'

# Preview change
sd -p '<before>' '<after>' <input_file>

$ input_file: ls -p | grep -v /

% bash, awk

# Print Nth element
awk '{ print $<index> }'

# Print Nth element with custom field separator
awk -F'<field_separator>' '{ print $<index> }'

# Print elements and concat with spaces
awk '{ print $<index_1>,$<index_2> }'

# Print elements and concat with commas
awk '{ print $<index_1> "," $<index_2> }'

# Print number of row
awk '{ print NR " " $<index> }'

# AWK with regex
awk '/<regex>/ { print $<index> }'

# AWK with match field
awk '$<index_1> == "<match_field>" { print $<index_2> }'

# Matches within specific field
awk '$<index_1>~/<regex>/ { print $<index_2> }'

# Printf with substr (index starts from 1)
awk '{ printf "%s\n", substr($<index>, <from>, <to>) }'

# Set the desired column width
awk '{ printf "%-<column_width>s \t %s \n", NR, $<index> }'

% bash, tail

# Tail logs from remote container
ssh <host> 'docker logs --tail <nb_last_logs> -f <service_name>' | jq --unbuffered -jr '."@timestamp", " [", .level, "] ", .message, "\n", .stack_trace | select(.!=null)' | sed --unbuffered -e 's~\(.*ERROR.*\)~\o033[0;41m\1\o033[0m~' -e 's~\(.*WARN.*\)~\o033[1;43;1;30m\1\o033[0m~' -e 's~\(.*DEBUG.*\)~\o033[1;30m\1\o033[0m~'

# Tail logs from remote container of all servers
env=<env> && app=<app> && tailr --lines 10 --env ${env} --app ${app}

# Get env variables from remote container
ssh <host> 'docker exec <service_name> env' | sort

$ host: cat /etc/hosts | awk '{ print $2 }' | sort | uniq
$ service_name: ssh <host> 'docker ps -a --format "{{.Names}}"' | grep -v cadvisor | grep -v liquibase
$ env: find ~/work/big-cloud/config/ -maxdepth 1 -type d | awk -F'/' '{ print $7 }' | sort | uniq
$ app: find ~/work/big-cloud/ansible/playbooks/files/applications/ -maxdepth 1 -type d | awk -F'/' '{ print $10 }' | sort | uniq

% bash, date

# Convert epoch timestamp to human readable
date -d@<timestamp_in_second> '+%Y-%m-%dT%H:%M:%SZ'

# Convert human readable to epoch timestamp in second
date +%s -d '<timestamp_in_iso_8601>'

% bash, grep

# Extract specific text
grep -o '<prefix>\(.*\)<suffix>' <file> | sed 's/<prefix>\(.*\)<suffix>/\1/'

% bash, sort

# Sort file by nth column
sort -k <n> <input_file>

$ input_file: ls -p | grep -v /

% systemd

# Restart service
systemctl restart <service>

# View service's logs
systemctl -l status <service>

# View all service's logs
journalctl -u <service>

$ service: systemctl list-units | grep '.service' | awk '{ print $1 }'

